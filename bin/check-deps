#!/usr/bin/env bash
set -euo pipefail

# check-deps — validate WorkOn development dependencies

VERSION="0.1.0-alpha"
ERRORS=0

check_command() {
    local cmd="$1" desc="$2" install_hint="$3"
    if command -v "$cmd" >/dev/null 2>&1; then
        printf "✓ %s (%s)\n" "$cmd" "$desc"
    else
        printf "✗ %s missing — %s\n" "$cmd" "$desc"
        printf "  Install: %s\n" "$install_hint"
        ERRORS=$((ERRORS + 1))
    fi
}

check_yq_version() {
    local desc="$1" install_hint="$2"
    if ! command -v yq >/dev/null 2>&1; then
        printf "✗ yq missing — %s\n" "$desc"
        printf "  Install: %s\n" "$install_hint"
        ERRORS=$((ERRORS + 1))
        return
    fi
    
    local version_output
    version_output=$(yq --version 2>&1)
    
    # Check for v4+ by looking for "v4", "v5", etc. in version output
    if echo "$version_output" | grep -q "v[4-9]"; then
        printf "✓ yq (%s)\n" "$desc"
    else
        printf "✗ yq wrong version — %s\n" "$desc"
        printf "  Found: %s\n" "$version_output"
        printf "  Need: yq v4+ (supports 'yq eval -o=json' syntax)\n"
        printf "  Install: %s\n" "$install_hint"
        ERRORS=$((ERRORS + 1))
    fi
}

echo "WorkOn dependency check v$VERSION"
echo

# Core shell tools
check_command "bash" "Shell interpreter" "system package manager"
check_command "shellcheck" "Shell linting" "apt install shellcheck / brew install shellcheck"

# Testing (development only)
if [[ ${1:-} != "--runtime-only" ]]; then
    check_command "bats" "Test framework" "npm install -g bats / brew install bats-core"
fi

# Phase 1 runtime dependencies
check_yq_version "YAML processor v4+" "sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 && sudo chmod +x /usr/local/bin/yq"
check_command "jq" "JSON processor" "apt install jq / pacman -S jq"
check_command "awesome-client" "AwesomeWM client" "apt install awesome / pacman -S awesome"

# Phase 2 runtime dependencies (Lua spawn architecture)
check_command "lua" "Lua interpreter" "apt install lua5.4 / pacman -S lua"

echo
if [[ $ERRORS -eq 0 ]]; then
    echo "All dependencies satisfied ✓"
    exit 0
else
    echo "$ERRORS missing dependencies ✗"
    exit 1
fi
